<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.lf.TypeMethod.Box"/>
    <fullyQualifiedTypeName name="E"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="java.util.Comparator"/>
    <fullyQualifiedTypeName name="com.lf.sort.Person"/>
    <fullyQualifiedTypeName name="com.lf.comparable.Student"/>
    <fullyQualifiedTypeName name="java.lang.Comparable"/>
    <fullyQualifiedTypeName name="java.lang.InternalError"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="java.lang.Number"/>
    <fullyQualifiedTypeName name="com.lf.wildcards.Box"/>
    <fullyQualifiedTypeName name="T"/>
    <fullyQualifiedTypeName name="com.lf.array.ArrayList"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.lang.Object"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="java.util.HashSet"/>
    <fullyQualifiedTypeName name="com.lf.concurrent.MusicThread"/>
    <fullyQualifiedTypeName name="com.lf.communication.Producer"/>
    <fullyQualifiedTypeName name="com.lf.communication.Drop"/>
    <fullyQualifiedTypeName name="com.lf.communication.Consumer"/>
    <fullyQualifiedTypeName name="java.lang.Runnable"/>
    <fullyQualifiedTypeName name="java.util.concurrent.locks.ReentrantLock"/>
    <fullyQualifiedTypeName name="java.util.function.Consumer"/>
    <fullyQualifiedTypeName name="java.lang.Byte"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="javax.management.openmbean.OpenMBeanAttributeInfoSupport"/>
    <fullyQualifiedTypeName name="javax.xml.stream.events.Comment"/>
    <fullyQualifiedTypeName name="com.lf.file.Files"/>
    <fullyQualifiedTypeName name="java.io.FileWriter"/>
    <fullyQualifiedTypeName name="java.io.Reader"/>
    <fullyQualifiedTypeName name="java.lang.Thread"/>
    <fullyQualifiedTypeName name="java.io.BufferedWriter"/>
    <fullyQualifiedTypeName name="java.io.OutputStreamWriter"/>
    <fullyQualifiedTypeName name="java.lang.Character"/>
    <fullyQualifiedTypeName name="java.nio.charset.Charset"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="java.lang.System"/>
    <fullyQualifiedTypeName name="java.io.InputStreamReader"/>
    <fullyQualifiedTypeName name="java.io.FileReader"/>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.PrintWriter"/>
    <fullyQualifiedTypeName name="java.nio.channels.WritableByteChannel"/>
    <fullyQualifiedTypeName name="java.io.ObjectOutputStream"/>
    <fullyQualifiedTypeName name="java.io.FileOutputStream"/>
    <fullyQualifiedTypeName name="java.io.ObjectInputStream"/>
    <fullyQualifiedTypeName name="java.io.FileInputStream"/>
    <fullyQualifiedTypeName name="com.lf.objectInputSteam.Person"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="javax.swing.JFrame"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="com.lf.Asserts.Asserts"/>
    <fullyQualifiedTypeName name="java.net.ServerSocket"/>
    <fullyQualifiedTypeName name="java.net.Socket"/>
    <fullyQualifiedTypeName name="java.io.ByteArrayOutputStream"/>
    <fullyQualifiedTypeName name="java.io.InputStream"/>
</qualifiedTypeNameHistroy>
